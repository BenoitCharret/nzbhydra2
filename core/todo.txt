GUI
- !!! Reverse proxy support (done in settings)
- Config (getting, setting): Mostly done
- Update notification: Mostly done
- !!! basic Searching
- !!! searching with exclusion
- !!! searching by ID, autocomplete

Searching
- return indexerName access data to show in GUI
- pick indexers: show in GUI
- exclusions: mostly done
- !!! rejecting search results: mostly done
- !!! ID conversion: mostly done
- !!! query generation
- !!! search history: mostly done
- !!! hitlimit and downloadlimit

Config
- !!! Loading
- !!! Updating
- !!! Setting via web call
- !!! reloading config: Mostly done
- find out which settings require a restart and mark them accordingly

Downloader support: mostly done
- sabnzbd
- nzbget

NZB handling
- downloading: partly done
- referral, proxying: partly done
- get details

Indexer support
- binsearch
- nzbindex
- anizb
- nzbclub
- checking caps: half done, backend and cats missing
- checking auth / connection: done

Torrent support
- jackett / cardigann
- special handling

Updater: Proof of concept with wrapper works
- update notification
- self updating

Process control
- Restart: Works, based on wrapper
- Shutdown: Works, based on wrapper

Authorization https://kielczewski.eu/2014/12/spring-boot-security-application/
- mostly done
- log user name for appropriate actions

History & stats
- Search history: mostly done
- Download history: mostly done
- Stats: mostly done

Backups
- !! Save
- Restore: Probably using the wrapper
- create periodically
- create before updating

Windows GUI
- perhaps use java gui: https://github.com/kemitix/spring-boot-awt-gui-demo or http://stackoverflow.com/questions/22864008/how-to-configure-spring-boot-with-swing-application
- in that case updating will get even worse...

General, Ideas
- !! open browser on startup
- !! delete results older than x, perhaps do this as first background task?
- package static files in jar when delivering
- user agent http://springinpractice.com/2013/10/27/how-to-send-an-http-header-with-every-request-with-spring-resttemplate
- proxy
- wrap searches in ~30s timeout to prevent wrong code or other issues fucking up the system
- !! Log / config sanitation
- more config validation. make sure auth is properly configured, etc
- !! Initialize config
- timeout for indexer accesses is "global" (max time spent for access)
- migrating from old installation (config and database), either via web call or via loading from file system
- !! restart dialog pings until recognizes successful restart
- !! catch all API errors and let user decide if a) code 500 is returned b) XML with error code c) empty results
- dashboard in stats section, downloads, API searches, normal searches, application errors in the last x days
- rss functionality with configurable caching, perhaps with cache interval as parameter
- banner
- store IP address in search / download history. opt-in. use nullable column. show what available in history

++++
Improvements
- Way faster (searching, database handling, processing, stats). TODO: Get some numbers
- Hopefully more stable in the long run
- Fully unicode compatible TODO: Test this ;-)
- Background processes
- In the future: Cancel searches, self updating
- Sends all available identifiers instead of just one
- Reverse proxy support is better (doesn't matter if called by trailing slash)
- Option to add and remove categories
- better validation for configuration
- catch all API errors and let user decide if a) code 500 is returned b) XML with error code c) empty results
...
++++


5 runs with 5 parallel calls to Hydra which will call 5 indexers
Hydra Python: 176s
Hydra Java: 27s

5 runs with 1 parallel call to Hydra which will call 5 indexers
Hydra Python: 7911ms
Hydra Java: 2200ms


Check out:
https://github.com/google/FreeBuilder
https://github.com/amaembo/streamex/blob/master/CHEATSHEET.md and/or http://www.javaslang.io/